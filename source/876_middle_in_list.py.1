#!/usr/bin/python
class ListNode():
    def __init__(self,val=None):
        self.val = val
        self.next = None
   
class LList():
    def __init__(self):
        self.head = None

    def append(self,val):
        node = ListNode(val)
        if not self.head:
            self.head = node
            return

        p = self.head
        while p.next:
            p = p.next

        p.next = node
      
    def lprint(self):
        if not self.head:
            print ''
            return
        
        p = self.head
        while p:
            print p.val,
            p = p.next

        print ''

    def middle(self):
        if not self.head:
            return ''
        slow = self.head
        fast = self.head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next

        return slow 

case = [[1,2,3,4,5],
        [1,2,3,4,5,6],
        [],
        [1,2,3,2,1]
        ]
for i in case:
    my_list = LList()
    for j in i:
        my_list.append(j)
    my_list.lprint()
    middle = my_list.middle()
    print middle.val if middle else ''
