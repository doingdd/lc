#!/usr/bin/python

class Node():
    def __init__(self,val=None):
        self.val = val
        self.next = None
 
class ListNode():
    def __init__(self):
        self.head = None

    def append(self,val):
        node = Noed(val)
        if not self.head:
            self.head = node
            return
      
        p = self.head
        while p.next:
            p = p.next
        
        p.next = node
        return 

    def pprint(self):
        if not self.head:
            print "Empty"
        p = self.head
        while p:
            print p.val,
            p = p.next

        print ''

        return 

def construct(l):
    if not l:
        return ListNode()

    listnode = ListNode()
    p = listnode.head = Node(l[0])
    for i in l[1:]:
       node = Node(i)
       p.next = node
       p = p.next

    return listnode

def add_list(l1,l2):
    list_1 = construct(l1)
    list_2 = construct(l2)
    head1 = list_1.head
    head2 = list_2.head
    l3 = []
    c_bit = 0
    while head1 or head2:
        n_bit = ((head1.val if head1 else 0) + (head2.val if head2 else 0) + c_bit)%10
        c_bit = ((head1.val if head1 else 0) + (head2.val if head2 else 0) + c_bit)/10
        l3.append(n_bit)
        head1 = head1.next if head1 else None
        head2 = head2.next if head2 else None
    
    if c_bit:
        l3.append(c_bit)

    return construct(l3)

case = [([2,4,3],[5,6,4]),
        ([9,9,9,9,9,9,9],[9,9,9,9]),
        ([],[]),
        ([0],[0]),
        ([1],[0]),
        ([1,0],[1,0])
      
       ]    

for c in case:
    print "case is ", c
    print "result is ", 
    add_list(c[0],c[1]).pprint()
