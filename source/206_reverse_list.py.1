#!/usr/bin/python
class Node():
    def __init__(self,val=None):
        self.val = val
        self.next = None

class ListNode():
    def __init__(self):
        self.head = None

    def pprint(self):
        if not self.head:
            print "Empty"
        
        p = self.head
        while p:
            print p.val,
            p = p.next

        print ''

    def construct(self,l):
        if not l:
            return
        self.head = Node(l[0])
        p = self.head
        for i in l[1:]:
            node = Node(i)
            p.next = node
            p = p.next

def reverse(l):
    listnode = ListNode()
    listnode.construct(l)
    pre = None
    cur = listnode.head
    while cur:
        temp = cur.next
        cur.next = pre
        pre = cur
        cur = temp

    listnode.head = pre
    return listnode

case = [[1,2,3,4,5],
       [1,2],
       [1,2,3],
       [],
       [1],
       [2,2],
       [0,0,0]]
for i in case:
    print "case is ",i
    print "result is ",
    reverse(i).pprint()
