#!/usr/bin/python

def down(arr,p_idx):
    n = len(arr)
    c_idx = 2*p_idx + 1
    tmp = arr[p_idx]
    while c_idx < n:
        if c_idx + 1 < n and arr[c_idx+1]<arr[c_idx]:
            c_idx += 1

        if tmp <= arr[c_idx]:
            break

        arr[p_idx] = arr[c_idx]
        p_idx = c_idx
        c_idx = p_idx*2 +1

    arr[p_idx] = tmp
        
def build(arr):
    ## last parent index
    i = (len(arr)-1-1)/2
    ## down every parent index
    while i >= 0:
        down(arr,i)
        i -= 1

    return arr
case = [[8,3,2,2,3,4,5,6,7]]
for i in case:
    print i,build(i)
